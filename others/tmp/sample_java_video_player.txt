

	//@Override
	//protected void onPause() {
	//	if (wakeLock != null)
	//		wakeLock.release();
	//	
	//	//mAudioThread.pauseAudioPlayback();
	//	demoRenderer.nativePlayerPause();

	//	super.onPause();
	//}

	//@Override
	//protected void onResume() {
	//	if (wakeLock != null)
	//		wakeLock.acquire();
	//	demoRenderer.nativePlayerPlay();
	//	//mAudioThread.resumeAudioPlayback();
	//	super.onResume();
	//}


	//View trScrolledTime;
	//View imgNext; View imgPrev;
	//View img43; View img169; View imgFullscreen;
	//TextView scrolledtime;

	/*	private Runnable autoHider = new Runnable() {

		@Override
		public void run() {
			// TODO Auto-generated method stub
			System.out.println("Running AutoHider");
			mHideContainer.setVisibility(View.GONE);
    		mProgressBarContainer.setVisibility(View.GONE);
    		mVideoPanel.setVisibility(View.GONE);
		}
	};
	 */
	/*imgPrev.setOnTouchListener(new OnTouchListener() {			
	@Override
	public boolean onTouch(View v, MotionEvent event) {
		ImageView img = (ImageView) v;
		if (event.getAction() == MotionEvent.ACTION_DOWN ) {		            		            
			img.setImageResource(R.drawable.prev);

        }
        else if (event.getAction() == MotionEvent.ACTION_UP ) {		        	
			img.setImageResource(R.drawable.prev_shadow);
			totalDuration = 0;
			System.out.println("Calling KeyCode_1");
			demoRenderer.nativePlayerPrev();
        }
		demoRenderer.fileInfoUpdated = false;				
        return true;
	}
});

imgNext.setOnTouchListener(new OnTouchListener() {			
	@Override
	public boolean onTouch(View v, MotionEvent event) {
		ImageView img = (ImageView) v;
		if (event.getAction() == MotionEvent.ACTION_DOWN ) {		            		            
			img.setImageResource(R.drawable.next);
        }
        else if (event.getAction() == MotionEvent.ACTION_UP ) {		        	
			img.setImageResource(R.drawable.next_shadow);
			totalDuration = 0;
			System.out.println("Calling KeyCode_2");
			demoRenderer.nativePlayerNext();
        }							
		demoRenderer.fileInfoUpdated = false;
        return true;
	}
});

        /*img43.setOnTouchListener(new OnTouchListener() {			
			@Override
			public boolean onTouch(View v, MotionEvent event) {
				ImageView img = (ImageView) v;
				if (event.getAction() == MotionEvent.ACTION_DOWN ) {		            		            
					img.setImageResource(R.drawable.img_4_3_glow);
					System.out.println("==================4:3 glow");
		        }
		        else if (event.getAction() == MotionEvent.ACTION_UP ) {
		        	img.setImageResource(R.drawable.img_4_3_glow);
					demoRenderer.nativePlayerSetAspectRatio(1);
					img.setImageResource(R.drawable.img_4_3);		
					System.out.println("======================4:3");
		        }						
				//resetAutoHider();
		        return true;
			}
		});

        img169.setOnTouchListener(new OnTouchListener() {			
			@Override
			public boolean onTouch(View v, MotionEvent event) {
				ImageView img = (ImageView) v;
				if (event.getAction() == MotionEvent.ACTION_DOWN ) {		            		            
					img.setImageResource(R.drawable.img_16_9_glow);
					System.out.println("=================16:9 glow");
		        }
		        else if (event.getAction() == MotionEvent.ACTION_UP ) {
		        	img.setImageResource(R.drawable.img_16_9_glow);

					demoRenderer.nativePlayerSetAspectRatio(2);
					img.setImageResource(R.drawable.img_16_9);
					System.out.println("=====================16:9");

		        }						
				//resetAutoHider();
		        return true;
			}
		});
	 */
	/*imgFullscreen.setOnTouchListener(new OnTouchListener() {			
			@Override
			public boolean onTouch(View v, MotionEvent event) {
				ImageView img = (ImageView) v;
				if (event.getAction() == MotionEvent.ACTION_DOWN ) {		            		            
					img.setImageResource(R.drawable.fullscreen_glow);
					System.out.println("Fullscreen glow");
		        }
		        else if (event.getAction() == MotionEvent.ACTION_UP ) {
		        	img.setImageResource(R.drawable.fullscreen_glow);

					demoRenderer.nativePlayerSetAspectRatio(3);
					img.setImageResource(R.drawable.fullscreen);	
					System.out.println("Fullscreen");
		        }						
				//resetAutoHider();
		        return true;
			}
		});
	 */

	*/
	/*OnClickListener mGoneListener = new OnClickListener() {
public void onClick(View v) {
	System.out.println("Inside mGone Click");
	if ((mHideContainer.getVisibility() == View.INVISIBLE) ||
	    (mHideContainer.getVisibility() == View.GONE)){
		mHideContainer.setVisibility(View.VISIBLE);
		mProgressBarContainer.setVisibility(View.VISIBLE);
		mVideoPanel.setVisibility(View.VISIBLE);
		restartUpdater();
		//resetAutoHider();
		System.out.println("Auto hiding in a few seconds");
	}
	else {
		//mHideContainer.setVisibility(View.GONE);
		//mProgressBarContainer.setVisibility(View.GONE);
		//mVideoPanel.setVisibility(View.GONE);

		mHideContainer.setVisibility(View.INVISIBLE);
		mProgressBarContainer.setVisibility(View.INVISIBLE);
		mVideoPanel.setVisibility(View.INVISIBLE);
		seekBarUpdater.stopIt();
	}
}
};

OnClickListener mVisibleListener = new OnClickListener() {
public void onClick(View v) {
		if ((mHideContainer.getVisibility() == View.GONE) ||
			(mHideContainer.getVisibility() == View.INVISIBLE)) {
		    //if (mHideContainer.getVisibility() == View.INVISIBLE) {
    		mHideContainer.setVisibility(View.VISIBLE);
    		mProgressBarContainer.setVisibility(View.VISIBLE);
    		mVideoPanel.setVisibility(View.VISIBLE);
    		restartUpdater();
    	}
    	else {
    		//mHideContainer.setVisibility(View.GONE);
    		//mProgressBarContainer.setVisibility(View.GONE);
    		//mVideoPanel.setVisibility(View.GONE);

    		mHideContainer.setVisibility(View.INVISIBLE);
    		mProgressBarContainer.setVisibility(View.INVISIBLE);
    		mVideoPanel.setVisibility(View.INVISIBLE);

    		seekBarUpdater.stopIt();
    	}
}
};
	 */    
	//private void resetAutoHider() {
	//mHandler.removeCallbacks(autoHider);    	
	//mHandler.postDelayed(autoHider, 5000);    	
	//}
	/*
@Override
public boolean onKeyDown(int keyCode, final KeyEvent event) {
	// Overrides Back key to use in our app
	System.out.println("keyCode onKeyDown"+keyCode); 
	if (mGLView != null)
		mGLView.nativeKey(keyCode, 1);
	if (keyCode == KeyEvent.KEYCODE_BACK)
		onStop();
	return true;
}

@Override
public boolean onKeyUp(int keyCode, final KeyEvent event) {
	if (mGLView != null)
		mGLView.nativeKey(keyCode, 0);
	System.out.println("keyCode onKeyUp"+keyCode);
	return true;
}
	 */

	/*class HideMeListener implements OnClickListener {
    final View mTarget;

    HideMeListener(View target) {
        mTarget = target;
    }

    public void onClick(View v) {
    	mTarget.setVisibility(View.INVISIBLE);
    }
}
	 */

	//@Override
	//protected void onNewIntent(Intent incomingIntent) {
	//super.onNewIntent();
	//      System.out.println("VideoPlayer onNewIntent incomingIntent.toString : "+incomingIntent.toString());		
	//}

